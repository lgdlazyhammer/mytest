/*istanbul ignore next*/'use strict';

var /*istanbul ignore next*/_react = require('react'); /*istanbul ignore next*/var _react2 = _interopRequireDefault(_react);
var /*istanbul ignore next*/_reactDom = require('react-dom'); /*istanbul ignore next*/var _reactDom2 = _interopRequireDefault(_reactDom);
var /*istanbul ignore next*/_reactAddonsTestUtils = require('react-addons-test-utils'); /*istanbul ignore next*/var _reactAddonsTestUtils2 = _interopRequireDefault(_reactAddonsTestUtils);

var /*istanbul ignore next*/_node = require('../node'); /*istanbul ignore next*/var _node2 = _interopRequireDefault(_node);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}jest.mock('../node'); //unmock to use the content
//import the real entity


describe('CheckboxWithLabel', function () {
  it('changes the text after click', function () {
    // Render a checkbox with label in the document
    var node = /*istanbul ignore next*/_reactAddonsTestUtils2.default.renderIntoDocument(
    /*istanbul ignore next*/_react2.default.createElement( /*istanbul ignore next*/_node2.default, /*istanbul ignore next*/null));


    var nodeNode = /*istanbul ignore next*/_reactDom2.default.findDOMNode(node);

    // Verify that it's Off by default
    //expect(checkboxNode.textContent).toEqual('Off');

    // ...
  });});